image: docker:18

services:
  - docker:18.09-dind

variables:
  BUILD_DIR: /opt/switcher
  CONTAINER_TAG_PREFIX: $CI_REGISTRY/sat-metalab/switcher:deps
  CTEST_OUTPUT_ON_FAILURE: '1'
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - deps
  - build
  - test
  - coverage
  - deploy

Docker -- Dependency Image:
  stage: deps
  image: docker:18-git
  script:
    - git diff HEAD:wrappers/switcherio/requirements.txt origin/develop:wrappers/switcherio/requirements.txt --quiet && git diff HEAD:deps origin/develop:deps --quiet && echo "New docker image build is not required" && exit 0
    - docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
    - docker build -t $CONTAINER_TAG_PREFIX-ubuntu2004 -f dockerfiles/Dockerfile-deps-Ubuntu-20.04 --target build .
    - docker push $CONTAINER_TAG_PREFIX-ubuntu2004
  except:
    - develop
    - master
    - ubuntu22.04

Build -- Ubuntu 20.04:
  stage: build
  image: $CONTAINER_TAG_PREFIX-ubuntu2004
  script:
    - cmake -B build -DENABLE_GPL="ON" -DCMAKE_BUILD_TYPE="Release"
    - make -sC build -j`nproc`
  except:
    - develop
    - master
    - ubuntu22.04
  artifacts:
    paths:
      - build

Test -- Ubuntu 20.04:
  stage: test
  image: $CONTAINER_TAG_PREFIX-ubuntu2004
  script:
    - DEBIAN_FRONTEND=noninteractive apt update -y && apt install -y xvfb
    - make install -sC build && ldconfig
    - pulseaudio --start
    - xvfb-run --auto-servernum --server-args='-screen 0 1920x1080x24' make test -sC build
  except:
    - ubuntu22.04
    - develop
    - master

Test -- Ubuntu 22.04:
  stage: test
  image: ubuntu:22.04
  script:
    - ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
    - DEBIAN_FRONTEND=noninteractive apt update -y && DEBIAN_FRONTEND=noninteractive apt install -y -qq git cmake build-essential libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev python3-dev
    - git clone https://gitlab.com/sat-metalab/shmdata.git 
    - cd shmdata && git checkout develop && mkdir build && cd build 
    - cmake -DCMAKE_BUILD_TYPE=Release .. 
    - make -j$(nproc) && make install && ldconfig && cd ../.. 
    - DEBIAN_FRONTEND=noninteractive apt install -y -qq $(cat deps/apt-build-ubuntu-22.04) $(cat deps/apt-runtime-ubuntu-22.04)
    - python3 -m pip install -U pip
    - pip3 install -r deps/pip3-ubuntu22.04 
    - cmake -B build -DENABLE_GPL="ON" -DPLUGIN_NVENC=OFF -DCMAKE_BUILD_TYPE="Release"
    - make -sC build -j`nproc`
    - DEBIAN_FRONTEND=noninteractive apt update -y && apt install -y xvfb
    - make install -sC build && ldconfig
    - pulseaudio --start
    - xvfb-run --auto-servernum --server-args='-screen 0 1920x1080x24' make test -sC build
  except:
    - develop
    - master

# Package
Test -- Package:
  stage: test
  image: $CONTAINER_TAG_PREFIX-ubuntu2004
  script:
    - cmake -B build -DENABLE_GPL=ON -DCMAKE_BUILD_TYPE="Release"
    - apt-key del 7fa2af80 && apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub
    - DEBIAN_FRONTEND=noninteractive apt update -y && apt install -y xvfb
    - xvfb-run --auto-servernum --server-args='-screen 0 1920x1080x24' make package_source_test -sC build
  only:
    - develop
    - test-switcher-ci

Coverage -- Package:
  stage: coverage
  image: $CONTAINER_TAG_PREFIX-ubuntu2004
  script:
    - apt-key del 7fa2af80 && apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub
    - DEBIAN_FRONTEND=noninteractive apt update -y && apt install -y lcov zip xvfb
    - rm -rf build && mkdir build && cd build
    - cmake -DTEST_COVERAGE=ON -DENABLE_GPL=ON ..
    - make -j`nproc` && make install && ldconfig
    - pulseaudio --start
    - xvfb-run --auto-servernum --server-args='-screen 0 1920x1080x24' make check_coverage
    - zip -r coverage.zip coverage
    - mv coverage.zip ../
  artifacts:
    name: "switcher_coverage_${CI_BUILD_REF_NAME}"
    paths:
    - "coverage.zip"
  only:
    - develop
    - test-switcher-ci

# Debian Package
Debian -- Package:
  stage: deploy
  image: $CONTAINER_TAG_PREFIX-ubuntu2004
  script:
    - DEBIAN_FRONTEND=noninteractive apt update -y
    - rm -rf build && mkdir build && cd build
    - cmake -DENABLE_GPL=ON -DCMAKE_INSTALL_PREFIX=/usr ..
    - make -j`nproc` package
    - mv *.deb ../switcher_ubuntu20.04_latest_amd64.deb
  artifacts:
    name: "switcher_package_${CI_BUILD_REF_NAME}"
    paths:
    - switcher_ubuntu20.04_latest_amd64.deb
  only:
    - master
    - test-switcher-ci
